{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.responsify = exports.useWindowWidth = exports.useIsomorphicLayoutEffect = void 0;\nconst react_1 = require(\"react\");\nconst constants_js_1 = require(\"./constants.js\");\n/**\n * This hook is like useLayoutEffect, but without the SSR warning\n * It seems hacky but it's used in many React libs (Redux, Formik...)\n * Also mentioned here: https://github.com/facebook/react/issues/16956\n * It is useful when you need to update a ref as soon as possible after a React\n * render (before `useEffect`)\n */\nexports.useIsomorphicLayoutEffect = typeof window !== \"undefined\" ? react_1.useLayoutEffect : react_1.useEffect;\n// Calculate window width\nfunction useWindowWidth() {\n  const [width, setWidth] = (0, react_1.useState)(constants_js_1.sizeMap[constants_js_1.defaultSize]);\n  (0, exports.useIsomorphicLayoutEffect)(() => {\n    const updateWidth = () => {\n      setWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", updateWidth);\n    updateWidth();\n    return () => window.removeEventListener(\"resize\", updateWidth);\n  }, []);\n  return width;\n}\nexports.useWindowWidth = useWindowWidth;\n// Adjust responsive size\nfunction responsify(sizeOption, windowWidth) {\n  if (sizeOption === \"responsive\") {\n    // Make component work in SSR\n    if (typeof window === \"undefined\") return constants_js_1.sizeMap[constants_js_1.defaultSize];\n    return Math.min(window.innerHeight, window.innerWidth) * 0.75;\n  }\n  if (typeof window === \"undefined\") return constants_js_1.sizeMap[sizeOption];\n  // First size that fits window size\n  const fittingSize = Object.values(constants_js_1.sizeMap).reverse().find(size => size <= windowWidth) ?? constants_js_1.sizeMap.sm;\n  return Math.min(fittingSize, constants_js_1.sizeMap[sizeOption]);\n}\nexports.responsify = responsify;","map":{"version":3,"names":["react_1","require","constants_js_1","exports","useIsomorphicLayoutEffect","window","useLayoutEffect","useEffect","useWindowWidth","width","setWidth","useState","sizeMap","defaultSize","updateWidth","innerWidth","addEventListener","removeEventListener","responsify","sizeOption","windowWidth","Math","min","innerHeight","fittingSize","Object","values","reverse","find","size","sm"],"sources":["../src/utils.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,cAAA,GAAAD,OAAA;AAGA;;;;;;;AAOaE,OAAA,CAAAC,yBAAyB,GACpC,OAAOC,MAAM,KAAK,WAAW,GAAGL,OAAA,CAAAM,eAAe,GAAGN,OAAA,CAAAO,SAAS;AAE7D;AACA,SAAgBC,cAAcA,CAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG,IAAAV,OAAA,CAAAW,QAAQ,EAACT,cAAA,CAAAU,OAAO,CAACV,cAAA,CAAAW,WAAW,CAAC,CAAC;EACxD,IAAAV,OAAA,CAAAC,yBAAyB,EAAC,MAAK;IAC7B,MAAMU,WAAW,GAAGA,CAAA,KAAK;MACvBJ,QAAQ,CAACL,MAAM,CAACU,UAAU,CAAC;IAC7B,CAAC;IACDV,MAAM,CAACW,gBAAgB,CAAC,QAAQ,EAAEF,WAAW,CAAC;IAC9CA,WAAW,EAAE;IACb,OAAO,MAAMT,MAAM,CAACY,mBAAmB,CAAC,QAAQ,EAAEH,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EACN,OAAOL,KAAK;AACd;AAXAN,OAAA,CAAAK,cAAA,GAAAA,cAAA;AAaA;AACA,SAAgBU,UAAUA,CACxBC,UAAqC,EACrCC,WAAmB;EAEnB,IAAID,UAAU,KAAK,YAAY,EAAE;IAC/B;IACA,IAAI,OAAOd,MAAM,KAAK,WAAW,EAAE,OAAOH,cAAA,CAAAU,OAAO,CAACV,cAAA,CAAAW,WAAW,CAAC;IAE9D,OAAOQ,IAAI,CAACC,GAAG,CAACjB,MAAM,CAACkB,WAAW,EAAElB,MAAM,CAACU,UAAU,CAAC,GAAG,IAAI;;EAE/D,IAAI,OAAOV,MAAM,KAAK,WAAW,EAAE,OAAOH,cAAA,CAAAU,OAAO,CAACO,UAAU,CAAC;EAE7D;EACA,MAAMK,WAAW,GACfC,MAAM,CAACC,MAAM,CAACxB,cAAA,CAAAU,OAAO,CAAC,CACnBe,OAAO,EAAE,CACTC,IAAI,CAAEC,IAAI,IAAKA,IAAI,IAAIT,WAAW,CAAC,IAAIlB,cAAA,CAAAU,OAAO,CAACkB,EAAE;EACtD,OAAOT,IAAI,CAACC,GAAG,CAACE,WAAW,EAAEtB,cAAA,CAAAU,OAAO,CAACO,UAAU,CAAC,CAAC;AACnD;AAlBAhB,OAAA,CAAAe,UAAA,GAAAA,UAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}